_target_: topobenchmarkx.io.load.loaders.GraphLoader

# USE python train.py dataset.transforms.one_hot_node_degree_features.degrees_fields=x to run this config

defaults:
  #- transforms/data_manipulations: node_degrees
  - transforms/data_manipulations@transforms.one_hot_node_degree_features: one_hot_node_degree_features
  - transforms: ${get_default_transform:graph,${model}}

# Data definition
parameters:
  data_domain: graph
  data_type: ZINC
  data_name: ZINC
  data_dir: ${paths.data_dir}${dataset.parameters.data_domain}/${dataset.parameters.data_type}
  data_split_dir: ${paths.data_dir}data_splits/${dataset.parameters.data_name}

  # Dataset parameters
  num_features: 21 # torch_geometric ZINC dataset has 21 atom types
  max_node_degree: 20 # Use it to one_hot encode node degrees. Additional parameter to run dataset.transforms.one_hot_node_degree_features.degrees_fields=x
  num_classes: 1
  task: regression
  loss_type: mse
  monitor_metric: mae
  task_level: graph
  data_seed: 0
  split_type: 'fixed' # ZINC accept only <fixed> split
  #k: 10 # for k-Fold Cross-Validation

  # Dataloader parameters
  batch_size: 128 # We have an issue with allowing multiple graphs in a batch due to sparse incidences
  num_workers: 10
  pin_memory: False

